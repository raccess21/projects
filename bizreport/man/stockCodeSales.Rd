% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stockCodeAnalysis.R
\name{stockCodeSales}
\alias{stockCodeSales}
\title{Calculate Total Sale Quantity for Each Stock Code}
\usage{
stockCodeSales(data, num, decreasing = TRUE, returns = FALSE)
}
\arguments{
\item{data}{A DataFrame or tibble containing the sales or return data, with columns for `StockCode` and `Quantity`.}

\item{num}{An integer representing the number of top or bottom countries to return based on the total quantity. 
If `num` is negative, the bottom `abs(num)` countries will be returned.}

\item{decreasing}{A logical value indicating whether to sort the result in descending order (`TRUE`, default) 
or ascending order (`FALSE`).}

\item{returns}{A logical value indicating whether to filter for returns (`TRUE`) or sales (`FALSE`). Defaults to `FALSE` (sales).}
}
\value{
A DataFrame or tibble with the top `num` stock codes sorted by total quantity, with the column name 
  reflecting either "TotalReturns" or "TotalSales" based on the `returns` argument.
}
\description{
This function calculates the total quantity of sales or returns for each stock code in the provided dataset. 
It uses the `saleOrReturn` function to filter the data based on whether sales or returns are being considered, 
and then groups the data by stock code to compute the total quantity. The result is sorted and the top `num` stock 
codes are returned, based on the total quantity. The results are either in ascending or descending order, depending 
on the `decreasing` argument.
}
\examples{
df <- tibble(StockCode = c("A1", "B2", "A1", "B2", "C3"),
             Quantity = c(10, -5, 20, -2, 15))
stock_code_sales_result <- stockCodeSales(df, num = 2, returns = TRUE)
print(stock_code_sales_result)

}
